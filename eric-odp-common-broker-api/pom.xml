<?xml version="1.0" encoding="UTF-8"?>
<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 ~ COPYRIGHT Ericsson 2024
 ~
 ~
 ~
 ~ The copyright to the computer program(s) herein is the property of
 ~
 ~ Ericsson Inc. The programs may be used and/or copied only with written
 ~
 ~ permission from Ericsson Inc. or in accordance with the terms and
 ~
 ~ conditions stipulated in the agreement/contract under which the
 ~
 ~ program(s) have been supplied.
 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
        <groupId>com.ericsson.oss.containerisation</groupId>
        <artifactId>eric-odp-common-broker</artifactId>
        <version>1.8.0-SNAPSHOT</version>
  </parent>
  <artifactId>eric-odp-common-broker-api</artifactId>
  <version>1.8.0-SNAPSHOT</version>
  <packaging>jar</packaging>
  <name>eric-odp-common-broker-api</name>


  <properties>
    <!-- Set compiler Java version, MUST match the Dockerfile JDK version -->
    <maven.compiler.release>8</maven.compiler.release>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
  </properties>


  <dependencies>

    <!-- Required for Swagger Maven Plugin BEGIN-->
    <dependency>
      <groupId>javax.annotation</groupId>
      <artifactId>javax.annotation-api</artifactId>
      <version>1.3.2</version>
    </dependency>
    <dependency>
      <groupId>io.swagger.core.v3</groupId>
      <artifactId>swagger-annotations</artifactId>
      <version>${version.swagger-annotations}</version>
    </dependency>
    <dependency>
      <groupId>org.jboss.resteasy</groupId>
      <artifactId>resteasy-jaxrs</artifactId>
      <version>${version.resteasy}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.jboss.resteasy</groupId>
      <artifactId>resteasy-client</artifactId>
      <version>${version.resteasy}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.jboss.resteasy</groupId>
      <artifactId>resteasy-multipart-provider</artifactId>
      <version>${version.resteasy}</version>
      <scope>provided</scope>
    </dependency>
    <!-- JSON processing: jackson -->
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-core</artifactId>
      <version>${version.jackson-core}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-annotations</artifactId>
      <version>${version.jackson-annotations}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
      <version>${version.jackson-databind}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.jaxrs</groupId>
      <artifactId>jackson-jaxrs-json-provider</artifactId>
      <version>${version.jackson-jaxrs-json-provider}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.datatype</groupId>
      <artifactId>jackson-datatype-jsr310</artifactId>
      <version>${version.jackson-datatype-jsr310}</version>
      <scope>provided</scope>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <!--  This 2019 version is required for OpenAPI 3  -->
        <groupId>io.swagger.codegen.v3</groupId>
        <artifactId>swagger-codegen-maven-plugin</artifactId>
        <version>${version.swagger-codegen}</version>
        <executions>
          <execution>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <inputSpec>${project.basedir}/src/main/resources/openapi/odp-factory.yaml</inputSpec>
              <language>java</language>
              <packageName>${client.base.package.name}</packageName>
              <modelPackage>${client.base.package.name}.model</modelPackage>
              <apiPackage>${client.base.package.name}.api</apiPackage>
              <invokerPackage>${client.base.package.name}.invoker</invokerPackage>
              <configOptions>
                <groupId>${project.groupId}</groupId>
                <artifactId>${project.artifactId}</artifactId>
                <artifactVersion>${project.version}</artifactVersion>
                <library>resteasy</library>
                <java8>true</java8>
                <dateLibrary>java8</dateLibrary>
              </configOptions>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <!-- JaCoCo plugin for Java Code Coverage -->
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>${version.jcoco-maven.plugin}</version>
        <configuration>
          <append>true</append>
          <excludes>
            <exclude>**/api/**/*</exclude>
            <exclude>**/models/*.*</exclude>
          </excludes>
        </configuration>
        <executions>
          <execution>
            <id>jacoco-check</id>
            <goals>
              <goal>check</goal>
            </goals>
            <phase>test</phase>
            <!-- JaCoCo uses a set of different counters to calculate coverage
                            metrics -->
            <!-- Check configuration used to specify rules on element types (BUNDLE,
                            PACKAGE, CLASS, SOURCEFILE or METHOD) with a list of limits. Each limit applies
                            to a certain counter (INSTRUCTION, LINE, BRANCH, COMPLEXITY, METHOD, CLASS)
                            and defines a minimum or maximum for the corresponding value (TOTALCOUNT,
                            COVEREDCOUNT, MISSEDCOUNT, COVEREDRATIO, MISSEDRATIO). A limit ratio may
                            optionally be declared as a percentage where 0.80 and 80% represent the same
                            value, the value must end with %. -->
            <configuration>
              <rules>
                <rule implementation="org.jacoco.maven.RuleConfiguration">
                  <element>BUNDLE</element>
                  <limits>
                    <limit implementation="org.jacoco.report.check.Limit">
                      <counter>INSTRUCTION</counter>
                      <value>COVEREDRATIO</value>
                      <minimum>${jacoco-maven-plugin.coveredratio.minimum}</minimum>
                    </limit>
                  </limits>
                </rule>
              </rules>
              <excludes>
                <exclude>**/api/**/*</exclude>
                <exclude>**/models/*.*</exclude>
              </excludes>
            </configuration>
          </execution>
          <execution>
            <id>agent-for-ut</id>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
            <configuration>
              <excludes>
                <exclude>**/api/**/*</exclude>
                <exclude>**/models/*.*</exclude>
              </excludes>
            </configuration>
          </execution>
          <execution>
            <id>agent-for-it</id>
            <goals>
              <goal>prepare-agent-integration</goal>
            </goals>
            <configuration>
              <excludes>
                <exclude>**/api/**/*</exclude>
                <exclude>**/models/*.*</exclude>
              </excludes>
            </configuration>
          </execution>
          <execution>
            <id>jacoco-site</id>
            <goals>
              <goal>report</goal>
            </goals>
            <phase>verify</phase>
            <configuration>
              <excludes>
                <exclude>**/api/**/*</exclude>
                <exclude>**/models/*.*</exclude>
              </excludes>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- JaCoCo plugin for Java Code Coverage -->
    </plugins>
  </build>

</project>
